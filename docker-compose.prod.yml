version: '3.8'

services:
  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mqtt-broker
    restart: unless-stopped
    ports:
      - "1883:1883"    # MQTT port
      - "9001:9001"    # WebSocket port
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - mqtt-ai-network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "health_check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # AI Agent Server
  mqtt-ai-server:
    image: ghcr.io/aimoverse/hw-mqtt-srv:main
    container_name: mqtt-ai-server
    restart: unless-stopped
    depends_on:
      mosquitto:
        condition: service_healthy
    
    # Environment variables
    environment:
      # MQTT Configuration - Use internal broker
      MQTT_HOST: mosquitto
      MQTT_PORT: ${MQTT_PORT:-1883}
      MQTT_USERNAME: ${MQTT_USERNAME:-}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-}
      MQTT_CLIENT_ID: ${MQTT_CLIENT_ID:-mqtt-ai-server}
      MQTT_USE_TLS: ${MQTT_USE_TLS:-false}
      MQTT_KEEPALIVE: ${MQTT_KEEPALIVE:-60}
      
      # MQTT Topics
      MQTT_REQUEST_TOPIC: ${MQTT_REQUEST_TOPIC:-iot/+/audio_request}
      MQTT_RESPONSE_TOPIC: ${MQTT_RESPONSE_TOPIC:-iot/{device_id}/audio_response}
      MQTT_HEALTH_TOPIC: ${MQTT_HEALTH_TOPIC:-iot/server/health}
      
      # OpenAI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4o-realtime-preview}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-wss://api.openai.com/v1/realtime}
      OPENAI_VOICE: ${OPENAI_VOICE:-alloy}
      OPENAI_INSTRUCTIONS: ${OPENAI_INSTRUCTIONS:-You are a helpful AI assistant responding to voice commands from IoT devices.}
      
      # Server Configuration
      MAX_CONCURRENT_SESSIONS: ${MAX_CONCURRENT_SESSIONS:-50}
      SESSION_TIMEOUT_SECONDS: ${SESSION_TIMEOUT_SECONDS:-300}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      ENABLE_HEALTH_CHECKS: ${ENABLE_HEALTH_CHECKS:-true}
      HEALTH_CHECK_INTERVAL: ${HEALTH_CHECK_INTERVAL:-30}
    
    # Volume mounts
    volumes:
      - ./logs:/app/logs
      - ./audio:/app/audio:ro
    
    networks:
      - mqtt-ai-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; socket.create_connection(('mosquitto', 1883), timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Networks
networks:
  mqtt-ai-network:
    driver: bridge

# Volumes
volumes:
  mosquitto_data:
  mosquitto_logs: 